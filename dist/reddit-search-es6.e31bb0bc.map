{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","url","encodeURIComponent","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","addEventListener","e","value","querySelector","showMessage","reddit","results","output","forEach","post","permalink","image","preview","images","source","title","truncateText","selftext","num_comments","subreddit","score","innerHTML","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":"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","file":"reddit-search-es6.e31bb0bc.map","sourceRoot":"..","sourcesContent":["export default {\n  search: function(searchTerm, searchLimit, sortBy) {\n\n    const url = \"https://bypasscors.herokuapp.com/api/?url=\" + encodeURIComponent(\"http://www.reddit.com/search.json?q=\"); \n    \n    return fetch(`${url}${searchTerm}&sort=${sortBy}&limit=${searchLimit}`)\n    .then(res => res.json())\n    .then(data => data.data.children.map(data => data.data))\n    .catch(err => console.log(err));\n  }\n};","import reddit from './redditapi';\n\nconst searchForm = document.getElementById('search-form');\nconst searchInput = document.getElementById('search-input');\n\n// form event listener\nsearchForm.addEventListener('submit', e => {\n  // get search term\n  const searchTerm = searchInput.value;\n  // get sort\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n  // get limit\n  const searchLimit = document.getElementById('limit').value;\n  // check input\n  if(searchTerm === '') {\n    showMessage('Please add a search term.', 'alert-danger');\n  }\n\n  // clear input\n  searchInput.value = '';\n\n  // search reddit\n  reddit.search(searchTerm, searchLimit, sortBy)\n  .then(results => {\n    console.log(results);\n    let output = '<div class=\"card-columns\">'\n    results.forEach(post => {\n      // check for img\n      const permalink = 'https://www.reddit.com';\n      const image = post.preview ? post.preview.images[0].source.url : 'http://www.siliconbeat.com/wp-content/uploads/2014/11/reddit-logo-01-674x501.jpg'; \n      output += `\n        <div class=\"card\">\n          <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">${post.title}</h5>\n            <p class=\"card-text\">.${truncateText(post.selftext, 100)}</p>\n            <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\n            <a href=\"${permalink}${post.permalink}\" target=\"_blank\" class=\"btn btn-secondary\">Comments ${post.num_comments}</a>\n            <hr>\n            <span class=\"badge badge-info\">Subreddit: ${post.subreddit}</span>\n            <span class=\"badge badge-success\">Score: ${post.score}</span>\n          </div>\n        </div>\n      `;\n    });\n    output += '</div>';\n    document.getElementById('results').innerHTML = output;\n  });\n\n  e.preventDefault();\n});\n\n// show message\nfunction showMessage(message, className) {\n  // creat div\n  const div = document.createElement('div');\n  // add classes\n  div.className = `alert ${className}`;\n  // add text\n  div.appendChild(document.createTextNode(message));\n  // get parent container\n  const searchContainer = document.getElementById('search-container');\n  // get search\n  const search = document.getElementById('search');\n\n  //insert message\n  searchContainer.insertBefore(div, search);\n\n  // timeout alert\n  setTimeout(() => {\n    document.querySelector('.alert').remove();\n  }, 3000);\n};\n\n// truncate text\nfunction truncateText(text, limit) {\n  const shortened = text.indexOf(' ', limit);\n  if(shortened == -1) return text;\n  return text .substring(0, shortened);\n}"]}